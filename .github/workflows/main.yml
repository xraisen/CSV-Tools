name: Build CSV Tools (Windows & macOS)

on:
  push:
    tags:
      - 'v*'  # Trigger on versioned tags (e.g., v1.0.0)
  workflow_dispatch:  # Allow manual trigger

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: üì£ Checkout Repository
        uses: actions/checkout@v4

      - name: üêç Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'

      - name: üì¶ Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller pillow
        continue-on-error: false

      - name: üè† Build CSV Tools (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          $scripts = @("csvprocessor.py", "csvsplitter.py")
          foreach ($script in $scripts) {
              $name = [System.IO.Path]::GetFileNameWithoutExtension($script)
              pyinstaller --onefile --windowed --name $name --distpath dist/windows $script
              if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
          }

      - name: üçè Build CSV Tools (macOS)
        if: runner.os == 'macOS'
        shell: bash
        run: |
          set -e
          for script in csvprocessor.py csvsplitter.py; do
            name=$(basename "$script" .py)
            pyinstaller --onefile --name "$name" --distpath dist/macos "$script"
          done

      - name: üõ†Ô∏è Fix macOS Executables Permissions
        if: runner.os == 'macOS'
        shell: bash
        run: |
          chmod +x dist/macos/*

      - name: üìö Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: csv-tools-${{ matrix.os }}
          path: dist/*/*
          retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    steps:
      - name: üì£ Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêõ Debug Trigger Context
        run: |
          echo "github.ref: ${{ github.ref }}"
          echo "github.event_name: ${{ github.event_name }}"

      - name: ‚¨áÔ∏è Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: csv-tools-windows-latest
          path: releases/windows

      - name: ‚¨áÔ∏è Download macOS Artifacts
        uses: actions/download-artifact@v4
        with:
          name: csv-tools-macos-latest
          path: releases/macos

      - name: üìã List Downloaded Files
        run: |
          echo "Windows artifacts:"
          ls -la releases/windows/
          echo "macOS artifacts:"
          ls -la releases/macos/

      - name: üì¶ Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            releases/windows/*
            releases/macos/*
          tag_name: ${{ github.ref_name }}
          name: CSV Tools ${{ github.ref_name }}
          body: |
            ## CSV Tools Release ${{ github.ref_name }}
            
            This release includes binaries for:
            - Windows (64-bit)
            - macOS
            
            ### Downloads
            See attached files below.
            
            ### Changes
            Automatically generated release notes follow below.
          draft: false
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
