name: Build CSV Tools (Windows & macOS)

permissions:
  contents: write
  actions: read

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Triggers on tags like v1.0.0
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller pillow
          pip install pandas Flask Flask-Session google google-generativeai google-genai google-ai-generativelanguage google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client

      - name: Build CSV Tools (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          $scripts = @("csvprocessor.py", "csvsplitter.py", "csvsearchai.py")
          New-Item -ItemType Directory -Force -Path dist/windows | Out-Null
          foreach ($script in $scripts) {
              $name = [System.IO.Path]::GetFileNameWithoutExtension($script)
              pyinstaller --onefile --noconsole --hidden-import=google --hidden-import=google.auth --hidden-import=google.auth.transport --name $name --distpath dist/windows $script
              if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
          }
          echo "Windows Build Output:"
          Get-ChildItem dist/windows -Recurse

      - name: Build CSV Tools (macOS)
        if: ${{ matrix.os == 'macos-latest' }}
        shell: bash
        run: |
          mkdir -p dist/macos
          for script in csvprocessor.py csvsplitter.py csvsearchai.py; do
            name=$(basename "$script" .py)
            pyinstaller --onefile --hidden-import=pandas --hidden-import=flask --hidden-import=flask_session --hidden-import=google.auth --hidden-import=google_auth_oauthlib --hidden-import=google_auth_httplib2 --hidden-import=googleapiclient --hidden-import=google.generativeai --hidden-import=google.ai.generativelanguage --hidden-import=google.auth.transport --name "$name" --distpath dist/macos "$script"
          done
          echo "macOS Build Output:"
          ls -la dist/macos/

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: csv-tools-${{ matrix.os }}
          path: "dist/${{ matrix.os == 'windows-latest' && 'windows' || 'macos' }}/*"
          retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Current Date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Set Release Version
        id: version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=Release-${{ steps.date.outputs.date }}" >> $GITHUB_OUTPUT
          fi

      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: csv-tools-windows-latest
          path: releases/windows

      - name: Download macOS Artifacts
        uses: actions/download-artifact@v4
        with:
          name: csv-tools-macos-latest
          path: releases/macos

      - name: Create GitHub Release with Individual Files
        uses: softprops/action-gh-release@v2
        with:
          files: |
            releases/windows/csvprocessor.exe
            releases/windows/csvsplitter.exe
            releases/windows/csvsearchai.exe
            releases/macos/csvprocessor
            releases/macos/csvsplitter
            releases/macos/csvsearchai
          tag_name: ${{ steps.version.outputs.version }}
          name: CSV Tools ${{ steps.version.outputs.version }}
          body: |
            ## CSV Tools Release ${{ steps.version.outputs.version }}
            This release includes individual binaries for:
            - Windows (64-bit): `csvprocessor.exe`, `csvsplitter.exe`, `csvsearchai.exe`
            - macOS: `csvprocessor`, `csvsplitter`, `csvsearchai`
            ### Downloads
            Download the specific tool you need from the assets below.
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}