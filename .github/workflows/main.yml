name: Build CSV Tools (Windows & macOS)

permissions:
  contents: write
  actions: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  tags:
    - 'v*'
    - 'release'
  workflow_dispatch: {}

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: üì£ Checkout Repository
        uses: actions/checkout@v4

      - name: üêç Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'

      - name: üì¶ Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install pyinstaller pillow pandas Flask Flask-Session google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client google-generativeai numpy scipy openpyxl xlrd requests tqdm || true

      - name: üîç Debug Installed Packages
        run: pip list

      - name: üè† Build CSV Tools (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          $scripts = @("csvprocessor.py", "csvsplitter.py", "csvsearchai.py")
          New-Item -ItemType Directory -Force -Path dist/windows | Out-Null
          foreach ($script in $scripts) {
              $name = [System.IO.Path]::GetFileNameWithoutExtension($script)
              pyinstaller --onefile --noconsole --collect-submodules google-auth --collect-submodules Flask --collect-submodules google-api-python-client --collect-submodules pandas --collect-submodules numpy --name $name --distpath dist/windows $script
              if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
          }
          echo "Windows Build Output:"
          Get-ChildItem dist/windows -Recurse

      - name: üçè Build CSV Tools (macOS)
        if: runner.os == 'macOS'
        shell: bash
        env:
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
          PYTHONIOENCODING: UTF-8
          PYTHONUTF8: 1
        run: |
          set -ex
          mkdir -p dist/macos
          for script in csvprocessor.py csvsplitter.py csvsearchai.py; do
            name=$(basename "$script" .py)
            pyinstaller --onefile --collect-submodules google-auth --collect-submodules Flask --collect-submodules google-api-python-client --collect-submodules pandas --collect-submodules numpy --name "$name" --distpath dist/macos "$script"
          done
          echo "macOS Build Output:"
          ls -la dist/macos/

      - name: üìö Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: csv-tools-${{ matrix.os }}
          path: dist/${{ matrix.os == 'windows-latest' && 'windows' || 'macos' }}/*
          retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/release') || github.event_name == 'workflow_dispatch'
    steps:
      - name: üì£ Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ‚¨áÔ∏è Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: csv-tools-windows
          path: releases/windows

      - name: ‚¨áÔ∏è Download macOS Artifacts
        uses: actions/download-artifact@v4
        with:
          name: csv-tools-macos
          path: releases/macos

      - name: üìã Debug Downloaded Files
        run: |
          echo "Windows artifacts:"
          ls -la releases/windows || echo "No Windows files found"
          echo "macOS artifacts:"
          ls -la releases/macos || echo "No macOS files found"
          if [ -z "$(ls -A releases/windows)" ] || [ -z "$(ls -A releases/macos)" ]; then
            echo "Error: One or both artifact directories are empty"
            exit 1
          fi

      - name: üì¶ Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            releases/windows/*
            releases/macos/*
          tag_name: ${{ github.ref_name }}
          name: CSV Tools ${{ github.ref_name }}
          body: |
            ## CSV Tools Release ${{ github.ref_name }}
            This release includes binaries for:
            - Windows (64-bit)
            - macOS
            ### Downloads
            See attached files below.
            ### Changes
            Automatically generated release notes follow below.
          draft: false
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
